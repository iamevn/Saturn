Basics

Comments

  Only single-line comments are supported; they begin with the semicolon
  character ';' and end at a newline.

      ; Read in a number, double it, then print the original
      ; and the number doubled
      int orig
      int dbl
      rin orig, stdin     ; Read in from stdin an integer into orig
      mov dbl, orig       ; Copy orig into dbl
      mul dbl, 2          ; Do the doubling
      out stdout, orig    ; Output
      out stdout, '\n'
      out stdout, dbl

Declarations

  To declare a variable, you specify the type and label, and optionally,
  an initial value:

      int far                   ; Declares an integer
      flt foo, 10.21            ; Initialize float foo to 10.21
      str bar, 'Hello'          ; Initialize string bar to 'Hello'

Assignment, and More

  Declared variables can be manipulataed with some instructions:


Control Flow

  With Saturn, labels can be used to set locations. Then, the `jmp`
  instruction can be used to jump to that location.

            int count           ; Always initialized to 0
            ; An infinite loop
      loop: inc count
            out stdout, count
            out stdout, '\n'
            jmp loop

  In the Saturn environment, conditional jumps are used to execute
  certain collections of statements depending on a condition. This
  condition is set by the previous statement. Here, `cmp` is used,
  which sets the condition to true if the arguments are equal, or
  to false if they are not.

               int n, 8
               int m, 10
               cmp n, m
               jqe nequalsm            ; if n == m, print 'n == m'
               cmp n, m
               jne nisnotm             ; if n != m, print 'n != m'

         nism: out stdout, n
               out stdout, ' == '
               out stdout, m
               jmp end

      nisnotm: out stdout, n
               out stdout, ' != '
               out stdout, m

          end: out stdout, '\n'
